version: '3.8'

services:
  frontend:
    image: ${ECR_REGISTRY}/frontend:${GIT_SHA}
    container_name: frontend
    environment:
      - BACKEND_RDS_URL=http://backend-rds:8000/test_connection/
      - BACKEND_REDIS_URL=http://backend-redis:8001/test_connection/
    ports:
      - "80:8002"
    depends_on:
      - backend-rds
      - backend-redis
    networks:
      - app_network


  backend-rds:
    image: ${ECR_REGISTRY}/backend-rds:${GIT_SHA}
    container_name: backend-rds
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgresdb
      - DB_HOST=database-game.cp8ukq08g3fe.eu-north-1.rds.amazonaws.com
      - DB_PORT=5432
      - CORS_ALLOWED_ORIGINS=http://backend-alb-432303704.eu-north-1.elb.amazonaws.com/
    ports:
      - "8000:8000"
    networks:
      - app_network
    restart: always
    command: gunicorn --bind 0.0.0.0:8000 backend_rds.wsgi:application


  backend-redis:
    image: ${ECR_REGISTRY}/backend-redis:${GIT_SHA}
    container_name: backend-redis 
    environment:
      - REDIS_HOST=clustercfg.redis.kxloed.eun1.cache.amazonaws.com
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CORS_ALLOWED_ORIGINS=http://backend-alb-432303704.eu-north-1.elb.amazonaws.com/
    ports:
      - "8001:8001"
    networks:
      - app_network
    restart: always
    command: gunicorn --bind 0.0.0.0:8001 backend_redis.wsgi:application

networks:
  app_network: