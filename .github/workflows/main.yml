name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
    paths:
        - 'frontend/**'
        - 'backend_rds/**'
        - 'backend_redis/**'
        - 'docker-compose.yml'          
        - '.github/workflows/**'    
  pull_request:
    branches:
      - main
    paths:
        - 'frontend/**'
        - 'backend_rds/**'
        - 'backend_redis/**'
        - 'docker-compose.yml'          
        - '.github/workflows/**'    

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          service: [frontend, backend-rds, backend-redis]  
          include:
            - service: frontend
              context: ./frontend
            - service: backend-rds
              context: ./backend_rds
            - service: backend-redis
              context: ./backend_redis
            
    steps:
        # Крок 1: Checkout репозиторію
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 5

        - name: Set up AWS CLI
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
  
        # Крок 2: Логін в AWS ECR
        - name: Login to Amazon ECR
          uses: aws-actions/amazon-ecr-login@v1       

        # Крок 4: Збереження GIT SHA
        - name: Save GIT SHA
          run: echo "GIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
        
        # Крок 5: Перевірка змін і збірка контейнерів для кожного сервісу
        - name: Build and push images if changed
          env:
            ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
          run: |
            BEFORE_COMMIT=${{ github.event.before }}
            CURRENT_COMMIT=${{ github.sha }}
            echo "BEFORE_COMMIT: $BEFORE_COMMIT"
            echo "CURRENT_COMMIT: $CURRENT_COMMIT"
            
            # Якщо немає початкового коміту, встановлюємо його на перший коміт
            if [ -z "$BEFORE_COMMIT" ] || [ "$BEFORE_COMMIT" = "0000000000000000000000000000000000000000" ]; then
              BEFORE_COMMIT=$(git rev-list --max-parents=0 HEAD)
            fi
            
            # Перевірка змін для кожного сервісу з матриці
            if git diff --name-only $BEFORE_COMMIT $CURRENT_COMMIT | grep -q "^${{ matrix.context }}/"; then
              IMAGE_NAME=$ECR_REGISTRY/${{ matrix.service }}:$CURRENT_COMMIT
              echo "Changes detected in ${{ matrix.service }}. Building and pushing image..."
              docker build -f ${{ matrix.context }}/Dockerfile -t $IMAGE_NAME ${{ matrix.context }}
              docker push $IMAGE_NAME
            else
              echo "No changes in ${{ matrix.service }}. Skipping build and push."
            fi

            # Перевірка змін у docker-compose.yml і перезапуск всіх сервісів, якщо є зміни
            if git diff --name-only $BEFORE_COMMIT $CURRENT_COMMIT | grep -q "docker-compose.yml"; then
              echo "Changes detected in Docker Compose. Rebuilding all services..."
              docker-compose build
              docker-compose push
            fi
    