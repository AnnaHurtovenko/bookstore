name: Build and Deploy to AWS

on:
  push:
    branches:
      - main
    paths:
        - 'frontend/**'
        - 'backend_rds/**'
        - 'backend_redis/**'
        - 'docker-compose.yml'          
        - '.github/workflows/**'    
  pull_request:
    branches:
      - main
    paths:
        - 'frontend/**'
        - 'backend_rds/**'
        - 'backend_redis/**'
        - 'docker-compose.yml'          
        - '.github/workflows/**'    

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend-rds, backend-redis]
        include:
          - service: frontend
            context: ./frontend
          - service: backend-rds
            context: ./backend_rds
          - service: backend-redis
            context: ./backend_redis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 5

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
  
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1       

      - name: Save GIT SHA
        run: echo "GIT_SHA=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push ${{ matrix.service }} image if changed
        env:
          ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
        run: |
          BEFORE_COMMIT=${{ github.event.before }}
          CURRENT_COMMIT=${{ github.sha }}  # Поточний коміт
          echo "BEFORE_COMMIT: $BEFORE_COMMIT"
          echo "CURRENT_COMMIT: $CURRENT_COMMIT"

          # Якщо немає початкового коміту, встановлюємо його на перший коміт
          if [ -z "$BEFORE_COMMIT" ] || [ "$BEFORE_COMMIT" = "0000000000000000000000000000000000000000" ]; then
              BEFORE_COMMIT=$(git rev-list --max-parents=0 HEAD)
          fi

          # Перевірка змін для кожного сервісу
          SERVICE=${{ matrix.service }}
          CONTEXT=${{ matrix.context }}
          DOCKERFILE=$CONTEXT/Dockerfile
          IMAGE_NAME=$ECR_REGISTRY/$SERVICE:$CURRENT_COMMIT

          # Перевірка на зміни в усіх файлах в контексті сервісу
          if git diff --name-only $BEFORE_COMMIT $CURRENT_COMMIT | grep -q "^$CONTEXT/"; then
              echo "Changes detected in $SERVICE. Building and pushing image..."
              docker build -f $DOCKERFILE -t $IMAGE_NAME $CONTEXT
              docker push $IMAGE_NAME
          else
              echo "No changes in $SERVICE. Skipping build and push."
          fi
          # Перевірка змін у docker-compose.yml для перезапуску всіх сервісів
            if git diff --name-only $BEFORE_COMMIT $CURRENT_COMMIT | grep -q "docker-compose.yml"; then
                echo "Changes detected in Docker Compose. Rebuilding all services..."
                docker-compose build
                docker-compose push
            fi